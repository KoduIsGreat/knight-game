// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package nw

import (
	"fmt"
	"strings"
)

const (
	// MsgAuth is a MessageHeader of type MsgAuth.
	MsgAuth MessageHeader = iota
	// MsgAuthAck is a MessageHeader of type MsgAuthAck.
	MsgAuthAck
	// MsgConnect is a MessageHeader of type MsgConnect.
	MsgConnect
	// MsgDisconnect is a MessageHeader of type MsgDisconnect.
	MsgDisconnect
	// MsgLobbyCreate is a MessageHeader of type MsgLobbyCreate.
	MsgLobbyCreate
	// MsgLobbyCreated is a MessageHeader of type MsgLobbyCreated.
	MsgLobbyCreated
	// MsgLobbyDeleted is a MessageHeader of type MsgLobbyDeleted.
	MsgLobbyDeleted
	// MsgLobbyGameStart is a MessageHeader of type MsgLobbyGameStart.
	MsgLobbyGameStart
	// MsgLobbyGameStarted is a MessageHeader of type MsgLobbyGameStarted.
	MsgLobbyGameStarted
	// MsgLobbyClientsNotReady is a MessageHeader of type MsgLobbyClientsNotReady.
	MsgLobbyClientsNotReady
	// MsgLobbyClientReady is a MessageHeader of type MsgLobbyClientReady.
	MsgLobbyClientReady
	// MsgLobbyClientJoin is a MessageHeader of type MsgLobbyClientJoin.
	MsgLobbyClientJoin
	// MsgLobbyClientLeave is a MessageHeader of type MsgLobbyClientLeave.
	MsgLobbyClientLeave
	// MsgLobbiesSync is a MessageHeader of type MsgLobbiesSync.
	MsgLobbiesSync
	// MsgLobbiesSynced is a MessageHeader of type MsgLobbiesSynced.
	MsgLobbiesSynced
	// MsgLobbyPromote is a MessageHeader of type MsgLobbyPromote.
	MsgLobbyPromote
	// MsgLobbyPromoted is a MessageHeader of type MsgLobbyPromoted.
	MsgLobbyPromoted
	// MsgLobbyKick is a MessageHeader of type MsgLobbyKick.
	MsgLobbyKick
	// MsgLobbyKicked is a MessageHeader of type MsgLobbyKicked.
	MsgLobbyKicked
	// MsgClientInput is a MessageHeader of type MsgClientInput.
	MsgClientInput
	// MsgServerState is a MessageHeader of type MsgServerState.
	MsgServerState
)

const _MessageHeaderName = "MsgAuthMsgAuthAckMsgConnectMsgDisconnectMsgLobbyCreateMsgLobbyCreatedMsgLobbyDeletedMsgLobbyGameStartMsgLobbyGameStartedMsgLobbyClientsNotReadyMsgLobbyClientReadyMsgLobbyClientJoinMsgLobbyClientLeaveMsgLobbiesSyncMsgLobbiesSyncedMsgLobbyPromoteMsgLobbyPromotedMsgLobbyKickMsgLobbyKickedMsgClientInputMsgServerState"

var _MessageHeaderMap = map[MessageHeader]string{
	MsgAuth:                 _MessageHeaderName[0:7],
	MsgAuthAck:              _MessageHeaderName[7:17],
	MsgConnect:              _MessageHeaderName[17:27],
	MsgDisconnect:           _MessageHeaderName[27:40],
	MsgLobbyCreate:          _MessageHeaderName[40:54],
	MsgLobbyCreated:         _MessageHeaderName[54:69],
	MsgLobbyDeleted:         _MessageHeaderName[69:84],
	MsgLobbyGameStart:       _MessageHeaderName[84:101],
	MsgLobbyGameStarted:     _MessageHeaderName[101:120],
	MsgLobbyClientsNotReady: _MessageHeaderName[120:143],
	MsgLobbyClientReady:     _MessageHeaderName[143:162],
	MsgLobbyClientJoin:      _MessageHeaderName[162:180],
	MsgLobbyClientLeave:     _MessageHeaderName[180:199],
	MsgLobbiesSync:          _MessageHeaderName[199:213],
	MsgLobbiesSynced:        _MessageHeaderName[213:229],
	MsgLobbyPromote:         _MessageHeaderName[229:244],
	MsgLobbyPromoted:        _MessageHeaderName[244:260],
	MsgLobbyKick:            _MessageHeaderName[260:272],
	MsgLobbyKicked:          _MessageHeaderName[272:286],
	MsgClientInput:          _MessageHeaderName[286:300],
	MsgServerState:          _MessageHeaderName[300:314],
}

// String implements the Stringer interface.
func (x MessageHeader) String() string {
	if str, ok := _MessageHeaderMap[x]; ok {
		return str
	}
	return fmt.Sprintf("MessageHeader(%d)", x)
}

var _MessageHeaderValue = map[string]MessageHeader{
	_MessageHeaderName[0:7]:                      MsgAuth,
	strings.ToLower(_MessageHeaderName[0:7]):     MsgAuth,
	_MessageHeaderName[7:17]:                     MsgAuthAck,
	strings.ToLower(_MessageHeaderName[7:17]):    MsgAuthAck,
	_MessageHeaderName[17:27]:                    MsgConnect,
	strings.ToLower(_MessageHeaderName[17:27]):   MsgConnect,
	_MessageHeaderName[27:40]:                    MsgDisconnect,
	strings.ToLower(_MessageHeaderName[27:40]):   MsgDisconnect,
	_MessageHeaderName[40:54]:                    MsgLobbyCreate,
	strings.ToLower(_MessageHeaderName[40:54]):   MsgLobbyCreate,
	_MessageHeaderName[54:69]:                    MsgLobbyCreated,
	strings.ToLower(_MessageHeaderName[54:69]):   MsgLobbyCreated,
	_MessageHeaderName[69:84]:                    MsgLobbyDeleted,
	strings.ToLower(_MessageHeaderName[69:84]):   MsgLobbyDeleted,
	_MessageHeaderName[84:101]:                   MsgLobbyGameStart,
	strings.ToLower(_MessageHeaderName[84:101]):  MsgLobbyGameStart,
	_MessageHeaderName[101:120]:                  MsgLobbyGameStarted,
	strings.ToLower(_MessageHeaderName[101:120]): MsgLobbyGameStarted,
	_MessageHeaderName[120:143]:                  MsgLobbyClientsNotReady,
	strings.ToLower(_MessageHeaderName[120:143]): MsgLobbyClientsNotReady,
	_MessageHeaderName[143:162]:                  MsgLobbyClientReady,
	strings.ToLower(_MessageHeaderName[143:162]): MsgLobbyClientReady,
	_MessageHeaderName[162:180]:                  MsgLobbyClientJoin,
	strings.ToLower(_MessageHeaderName[162:180]): MsgLobbyClientJoin,
	_MessageHeaderName[180:199]:                  MsgLobbyClientLeave,
	strings.ToLower(_MessageHeaderName[180:199]): MsgLobbyClientLeave,
	_MessageHeaderName[199:213]:                  MsgLobbiesSync,
	strings.ToLower(_MessageHeaderName[199:213]): MsgLobbiesSync,
	_MessageHeaderName[213:229]:                  MsgLobbiesSynced,
	strings.ToLower(_MessageHeaderName[213:229]): MsgLobbiesSynced,
	_MessageHeaderName[229:244]:                  MsgLobbyPromote,
	strings.ToLower(_MessageHeaderName[229:244]): MsgLobbyPromote,
	_MessageHeaderName[244:260]:                  MsgLobbyPromoted,
	strings.ToLower(_MessageHeaderName[244:260]): MsgLobbyPromoted,
	_MessageHeaderName[260:272]:                  MsgLobbyKick,
	strings.ToLower(_MessageHeaderName[260:272]): MsgLobbyKick,
	_MessageHeaderName[272:286]:                  MsgLobbyKicked,
	strings.ToLower(_MessageHeaderName[272:286]): MsgLobbyKicked,
	_MessageHeaderName[286:300]:                  MsgClientInput,
	strings.ToLower(_MessageHeaderName[286:300]): MsgClientInput,
	_MessageHeaderName[300:314]:                  MsgServerState,
	strings.ToLower(_MessageHeaderName[300:314]): MsgServerState,
}

// ParseMessageHeader attempts to convert a string to a MessageHeader.
func ParseMessageHeader(name string) (MessageHeader, error) {
	if x, ok := _MessageHeaderValue[name]; ok {
		return x, nil
	}
	// Case insensitive parse, do a separate lookup to prevent unnecessary cost of lowercasing a string if we don't need to.
	if x, ok := _MessageHeaderValue[strings.ToLower(name)]; ok {
		return x, nil
	}
	return MessageHeader(0), fmt.Errorf("%s is not a valid MessageHeader", name)
}

// MarshalText implements the text marshaller method.
func (x MessageHeader) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *MessageHeader) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseMessageHeader(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

func MessageHeaderValues() []MessageHeader {
	values := make([]MessageHeader, 0, len(_MessageHeaderValue))
	for v := range _MessageHeaderMap {
		values = append(values, v)
	}
	return values
}

func (x *MessageHeader) UnmarshalJSON(data []byte) error {
	return x.UnmarshalText(data)
}

func (x MessageHeader) MarshalJSON() ([]byte, error) {
	s, err := x.MarshalText()
	if err != nil {
		return nil, err
	}
	return []byte(`"` + string(s) + `"`), nil
}
